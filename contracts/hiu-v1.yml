openapi: 3.0.0
info:
  version: 0.0.1
  title: Health Information User
  description: |
    "Health information User" refers to an entity that wishes to consume the
    services of the Health Data Consent Manager and obtain aggregated health
    information for providing services to the patient .
    
    # Obselete! 
    This specification is not maintained anymore, and only exists for histrorical reasons. Instead please refer
    1. <a href="https://github.com/ProjectEKA/projecteka.github.io/blob/master/contracts/bridge-v1.yml">Bridges</a>
    2.<a ref="https://github.com/ProjectEKA/projecteka.github.io/blob/master/contracts/gateway-v1.yaml">Gateway</a>

servers:
  - url: https://ncg-dev.projecteka.in/hiu-api
    description: Dev

tags:
  - name: consent notification
  - name: data notification

paths:
  /v1/consent/notification/:
    post:
      tags:
        - consent notification
      deprecated: true
      summary: Consent notification
      description: Call back url from consent manager when consent artefact gets created.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsentNotification'
      responses:
        '204':
          description: Notification successful.
        '500':
          description: >
            **Causes:**
              * Downstream services are down
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/data/notification:
    post:
      tags:
        - data notification
      deprecated: true
      summary: data notification
      description: Once data is prepared at HIP, will be passed to HIU.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataNotification'
          application/xml:
            schema:
              $ref: '#/components/schemas/DataNotification'
      responses:
        '204':
          description: Data accepted.
        '500':
          description: >
            **Causes:**
              * Downstream services are down
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    ConsentStatus:
      type: string
      example: 'REQUESTED | EXPIRED | DENIED | GRANTED | REVOKED'
      enum:
        - REQUESTED
        - EXPIRED
        - DENIED
        - GRANTED
        - REVOKED
    ConsentArtefactReference:
      type: object
      properties:
        id:
          type: string
          example: '<consent-artefact-id>'
    ConsentNotification:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/ConsentStatus'
        timestamp:
          type: string
          format: date-time
          description: Denotes the time at which consent was granted/revoked
        consentRequestId:
          type: string
          example: '<consent-request-id>'
        consentArtefacts:
          type: array
          items:
            $ref: '#/components/schemas/ConsentArtefactReference'
    ErrorResponse:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/Error'
      xml:
        name: ErrorResponse
    Error:
      type: object
      properties:
        code:
          type: integer
          enum: [1000, 10001]
          description: >
            1. Error code 1000 : No patient found
            2. Error code 1001: Multiple patients found
        message:
          type: string
      xml:
        name: Error
    DataNotification:
      type: object
      required:
        - transactionId
        - entries
        - keyMaterial
        - pageNumber
        - pageCount
      properties:
        requestId:
          type: string
          format: uuid
          description: Transaction Id issued when data requested.
        entries:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/EntryContent'
              - $ref: '#/components/schemas/EntryLink'
        keyMaterial:
          $ref: '#/components/schemas/KeyMaterial'
    EntryContent:
      type: object
      required:
        - content
        - media
      properties:
        content:
          type: string
          description: Encrypted content
          example: Encrypted content of data packaged in FHIR bundle
        media:
          type: string
          enum: ['application/fhir+json']
        checksum:
          type: string
        carecontextReference:
          type: string
          description: care context reference number.
    EntryLink:
      type: object
      required:
        - link
        - media
      properties:
        link:
          type: string
          description: Encrypted content
          example: https://data-from.net/sa2321afaf12e13
        media:
          type: string
          enum: ['application/fhir+json']
        checksum:
          type: string
        carecontextReference:
          type: string
          description: care context reference number.
    KeyMaterial:
      type: object
      required:
        - cryptoAlg
        - curve
        - dhPublicKey
        - nonce
      properties:
        cryptoAlg:
          type: string
          format: string
          example: ECDH
        curve:
          type: string
          format: string
          example: Curve25519
        dhPublicKey:
          $ref: '#/components/schemas/KeyObject'
        nonce:
          type: string
          format: 32 byte string
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
    KeyObject:
      type: object
      required:
        - expiry
        - parameters
        - keyValue
      properties:
        expiry:
          type: string
          format: date-time
        parameters:
          type: string
          format: string
          example: Curve25519/32byte random key
        keyValue:
          type: string
          format: string